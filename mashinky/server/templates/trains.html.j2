{% extends '_base.html.j2' %}{% import 'macros/common.html.j2' as macros %}{% import 'macros/wagon_type.html.j2' as macros_wagon_type with context %}{% import 'macros/train.html.j2' as macros_train %}
{% block content %}
  <section class="container-fluid">
    <div class="row my-3">
      <div class="col">
        <div class="card">
          <div class="card-header">
            Epoch
          </div>
          <div class="card-body">
            <ul class="nav nav-pills nav-fill">
              {% for epoch in Epoch %}
                <li class="nav-item">
                  <a class="nav-link {% if epoch == options.epoch %}active{% endif %}" href="{{ url_for('trains', epoch=epoch.value) }}">
                    {{ epoch.numeral }}. {{ epoch }}
                  </a>
                </li>
              {% endfor %}
            </ul>
          </div>
        </div>
      </div>
    </div>

    <form action="" method="get">
      <input type="hidden" name="epoch" value="{{ options.epoch.value }}">
      <div class="row row-cols-2 g-3">

        <!-- Options -->
        <div class="col col-lg-3">
          <div class="card h-100">
            <div class="card-header">
              Options
            </div>
            <div class="card-body d-flex flex-column justify-content-between">

              <!-- Maximum Weight -->
              <div>
                <small>
                  <div class="mb-1">
                    <strong class="form-label">Maximum weight</strong>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="maximum_weight" value="full" id="maximum_weight_full" {% if options.maximum_weight.value == "full" %}checked{% endif %}>
                    <label class="form-check-label app-text-low" for="maximum_weight_full">
                      Train must be below the recommended weight when full.
                    </label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="maximum_weight" value="empty" id="maximum_weight_empty" {% if options.maximum_weight.value == "empty" %}checked{% endif %}>
                    <label class="form-check-label app-text-med" for="maximum_weight_empty">
                      Train must be below the recommended weight when empty.
                    </label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="maximum_weight" value="infinite" id="maximum_weight_infinite" {% if options.maximum_weight.value == "infinite" %}checked{% endif %}>
                    <label class="form-check-label app-text-high" for="maximum_weight_infinite">
                      No limit on train weight.
                    </label>
                  </div>
                </small>
              </div>

              <!-- Maximum Length -->
              <div class="my-3">
                <small>
                  <div class="mb-1">
                    <strong class="form-label">Maximum length</strong>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="maximum_length" value="short" id="maximum_length_short" {% if options.maximum_length.value == "short" %}checked{% endif %}>
                    <label class="form-check-label app-text-low" for="maximum_length_short">
                      Train must fit in a short station ({{ options.station_length_short }} tiles).
                    </label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="maximum_length" value="long" id="maximum_length_long" {% if options.maximum_length.value == "long" %}checked{% endif %}>
                    <label class="form-check-label app-text-med" for="maximum_length_long">
                      Train must fit in a long station ({{ options.station_length_long }} tiles).
                    </label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="maximum_length" value="infinite" id="maximum_length_infinite" {% if options.maximum_length.value == "infinite" %}checked{% endif %}>
                    <label class="form-check-label app-text-high" for="maximum_length_infinite">
                      No limit on train length.
                    </label>
                  </div>
                </small>
              </div>

              <!-- Station length -->
              <div>
                <div class="input-group input-group-sm mb-1">
                  <label class="input-group-text w-50" for="station_length_short">Station length (short)</label>
                  <input class="form-control" type="number" id="station_length_short" name="station_length_short" min="1" value="{{ options.station_length_short }}">
                </div>
                <div class="input-group input-group-sm">
                  <label class="input-group-text w-50" for="station_length_long">Station length (long)</label>
                  <input class="form-control" type="number" id="station_length_long" name="station_length_long" min="1" value="{{ options.station_length_long }}">
                </div>
              </div>

            </div>
          </div>
        </div>

        <!-- Selection -->
        <div class="col col-lg-6">
          <div class="card h-100">
            <div class="card-header">Selection</div>
            <div class="card-body">
              <div class="row">
                <!-- Engines -->
                <div class="col">
                  <select class="form-select form-select-sm" id="engines" name="engine_id" multiple size="10">
                    {% for engine in engines %}
                      <option value="{{ engine.id }}" {% if engine in options.engines %}selected{% endif %}>{{ macros_wagon_type.name(engine) }}</option>
                    {% endfor %}
                  </select>
                </div>

                <!-- Wagons -->
                <div class="col">
                  <select class="form-select form-select-sm" id="wagons" name="wagon_id" multiple size="10">
                    {% for wagon in wagons %}
                      <option value="{{ wagon.id }}" {% if wagon in options.wagons %}selected{% endif %}>{{ macros_wagon_type.name(wagon) }}</option>
                    {% endfor %}
                  </select>
                </div>

                <!-- Cargo -->
                <div class="col">
                  <select class="form-select form-select-sm" id="wagons" name="cargo_type_id" multiple size="10">
                    {% for cargo_type in cargo_types %}
                      <option value="{{ cargo_type.id }}" {% if cargo_type in options.cargo_types %}selected{% endif %}>{{ cargo_type.name }}</option>
                    {% endfor %}
                  </select>
                </div>
              </div>

              <div class="row mt-3">
                <div class="input-group">
                  <button class="btn btn-outline-primary flex-fill" type="submit">Search</button>
                  <button class="btn btn-outline-secondary" type="reset">Undo</button>
                  <a class="btn btn-outline-secondary" href="{{ url_for('trains', epoch=options.epoch.value) }}">Reset</a>
                </div>
              </div>

            </div>
          </div>
        </div>

        <!-- Results -->
        <div class="col col-lg-3">
          <div class="card h-100">
            <div class="card-header">
              Results
            </div>
            <div class="card-body">
              <p>
                Collected {{ results.trains|length }} trains.
                <span class="app-text-faded">Generated {{ results.after_generation|length }} trains,
                  removed {{ results.after_generation|length - results.after_discarding|length }} trains with unused engines,
                  removed {{ results.after_discarding|length - results.after_deduplication|length }} identical trains,
                  removed {{ results.after_deduplication|length - results.after_applying_rules|length }} trains over limits.
                </span>
              </p>
              <p>
                <span>
                  Using {{ engines|length }} engines:
                  {% for wagon_type in engines %}
                    {{- macros_wagon_type.name(wagon_type) -}}
                    {{- macros.comma(loop) -}}
                  {% endfor %}.
                </span>
              </p>
              <p>
                <span>
                  Using {{ wagons|length }} wagons:
                  {% for wagon_type in wagons %}
                    {{- macros_wagon_type.name(wagon_type) -}}
                    {{- macros.comma(loop) -}}
                  {% endfor %}.
                </span>
              </p>
              <p>
                <span>
                  Using {{ cargo_types|length }} types of cargo:
                  {% for cargo_type in cargo_types -%}
                    <span class="app-text-cargo">{{- cargo_type -}}</span>
                    {{- macros.comma(loop) -}}
                  {%- endfor %}.
                </span>
              </p>
            </div>
          </div>
        </div>

      </div>
    </form>
  </section>


  <section class="container-fluid my-5">
    <table class="table table-sm table-hover table-responsive align-middle">
      <thead class="thead-light align-top">
      <tr>
        <th class="text-start">Train</th>
        <th class="text-start">Description</th>
        <th class="text-start">Cargo</th>
        <th class="text-center">Epoch</th>
        <th class="text-start">Speed</th>
        <th class="text-start">Weight</th>
        <th class="text-start">Length</th>
        <th class="text-start">Cost</th>
        <th class="text-start">Fuel</th>
      </tr>
      </thead>
      <tbody class="table-group-divider">
      {% for train in results.trains %}
        {% set long = train.length > options.station_length_long %}
        {% if long %}
          <tr>
            <td class="text-start px-0 border-bottom-0 app-tiles-container" colspan="100%">{{- macros_wagon_type.icon_train(train, tile_width, options.station_length_long) -}}</td>
          </tr>
        {% endif %}
        <tr>
          <td class="text-start px-0 app-tiles-container">
            {% if not long %}{{- macros_wagon_type.icon_train(train, tile_width, options.station_length_long) -}}{% endif %}</td>
          <td class="text-start">{{ macros_wagon_type.description(train) }}</td>
          <td class="text-start">
            {{ macros_train.cargo_types(train) }}
            {% if train.capacity == best['capacity'] %}
              <span class="app-best" title="Highest capacity">★</span>
            {% endif %}
          </td>
          <td class="text-center">{{ macros_wagon_type.epoch(train) }}</td>
          <td class="text-start">
            {{ macros_wagon_type.speed(train) }}
            {% if train.max_speed == best['max_speed'] %}
              <span class="app-best" title="Highest speed">★</span>
            {% endif %}
          </td>
          <td class="text-start">
            {{ macros_train.weight(train) }}
            {% if train.utilization == best['utilization'] %}
              <span class="app-best" title="Highest utilization">★</span>
            {% endif %}</td>
          <td class="text-start">{{ macros_train.length(train, options) }}</td>
          <td class="text-start">{{ macros_train.costs(train.cost) }}</td>
          <td class="text-start">{{ macros_train.costs(train.fuel) }}</td>
        </tr>
      {% else %}
        <tr>
          <td class="text-center text-muted fst-italic p-3" colspan="100%">No results</td>
        </tr>
      {% endfor %}
      </tbody>
    </table>
  </section>
{% endblock %}
